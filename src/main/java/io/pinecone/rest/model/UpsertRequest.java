/*
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.pinecone.rest.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * The request for the &#x60;Upsert&#x60; operation.
 */
@ApiModel(description = "The request for the `Upsert` operation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-15T23:32:38.960526Z[Etc/UTC]")
public class UpsertRequest {
  public static final String SERIALIZED_NAME_VECTORS = "vectors";
  @SerializedName(SERIALIZED_NAME_VECTORS)
  private List<Vector> vectors = new ArrayList<Vector>();

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;


  public UpsertRequest vectors(List<Vector> vectors) {
    
    this.vectors = vectors;
    return this;
  }

  public UpsertRequest addVectorsItem(Vector vectorsItem) {
    this.vectors.add(vectorsItem);
    return this;
  }

   /**
   * This is the actual array data.
   * @return vectors
  **/
  @ApiModelProperty(required = true, value = "This is the actual array data.")

  public List<Vector> getVectors() {
    return vectors;
  }


  public void setVectors(List<Vector> vectors) {
    this.vectors = vectors;
  }


  public UpsertRequest namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * This is the namespace name where you upsert vectors.
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "example-namespace", value = "This is the namespace name where you upsert vectors.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpsertRequest upsertRequest = (UpsertRequest) o;
    return Objects.equals(this.vectors, upsertRequest.vectors) &&
        Objects.equals(this.namespace, upsertRequest.namespace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vectors, namespace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsertRequest {\n");
    sb.append("    vectors: ").append(toIndentedString(vectors)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

