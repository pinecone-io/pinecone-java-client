// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vector_service.proto

package io.pinecone.proto;

/**
 * <pre>
 * The request for the `Query` operation.
 * </pre>
 *
 * Protobuf type {@code QueryRequest}
 */
public final class QueryRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:QueryRequest)
    QueryRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use QueryRequest.newBuilder() to construct.
  private QueryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QueryRequest() {
    namespace_ = "";
    queries_ = java.util.Collections.emptyList();
    vector_ = emptyFloatList();
    id_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new QueryRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private QueryRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            namespace_ = s;
            break;
          }
          case 16: {

            topK_ = input.readUInt32();
            break;
          }
          case 26: {
            com.google.protobuf.Struct.Builder subBuilder = null;
            if (filter_ != null) {
              subBuilder = filter_.toBuilder();
            }
            filter_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(filter_);
              filter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            includeValues_ = input.readBool();
            break;
          }
          case 40: {

            includeMetadata_ = input.readBool();
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              queries_ = new java.util.ArrayList<io.pinecone.proto.QueryVector>();
              mutable_bitField0_ |= 0x00000001;
            }
            queries_.add(
                input.readMessage(io.pinecone.proto.QueryVector.parser(), extensionRegistry));
            break;
          }
          case 61: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              vector_ = newFloatList();
              mutable_bitField0_ |= 0x00000002;
            }
            vector_.addFloat(input.readFloat());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              vector_ = newFloatList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              vector_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        queries_ = java.util.Collections.unmodifiableList(queries_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        vector_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.pinecone.proto.VectorServiceOuterClass.internal_static_QueryRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.pinecone.proto.VectorServiceOuterClass.internal_static_QueryRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.pinecone.proto.QueryRequest.class, io.pinecone.proto.QueryRequest.Builder.class);
  }

  public static final int NAMESPACE_FIELD_NUMBER = 1;
  private volatile java.lang.Object namespace_;
  /**
   * <pre>
   * The namespace to query.
   * </pre>
   *
   * <code>string namespace = 1;</code>
   * @return The namespace.
   */
  @java.lang.Override
  public java.lang.String getNamespace() {
    java.lang.Object ref = namespace_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      namespace_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The namespace to query.
   * </pre>
   *
   * <code>string namespace = 1;</code>
   * @return The bytes for namespace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNamespaceBytes() {
    java.lang.Object ref = namespace_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      namespace_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOP_K_FIELD_NUMBER = 2;
  private int topK_;
  /**
   * <pre>
   * The number of results to return for each query.
   * </pre>
   *
   * <code>uint32 top_k = 2;</code>
   * @return The topK.
   */
  @java.lang.Override
  public int getTopK() {
    return topK_;
  }

  public static final int FILTER_FIELD_NUMBER = 3;
  private com.google.protobuf.Struct filter_;
  /**
   * <pre>
   * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
   * </pre>
   *
   * <code>.google.protobuf.Struct filter = 3;</code>
   * @return Whether the filter field is set.
   */
  @java.lang.Override
  public boolean hasFilter() {
    return filter_ != null;
  }
  /**
   * <pre>
   * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
   * </pre>
   *
   * <code>.google.protobuf.Struct filter = 3;</code>
   * @return The filter.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getFilter() {
    return filter_ == null ? com.google.protobuf.Struct.getDefaultInstance() : filter_;
  }
  /**
   * <pre>
   * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
   * </pre>
   *
   * <code>.google.protobuf.Struct filter = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getFilterOrBuilder() {
    return getFilter();
  }

  public static final int INCLUDE_VALUES_FIELD_NUMBER = 4;
  private boolean includeValues_;
  /**
   * <pre>
   * Indicates whether vector values are included in the response.
   * </pre>
   *
   * <code>bool include_values = 4;</code>
   * @return The includeValues.
   */
  @java.lang.Override
  public boolean getIncludeValues() {
    return includeValues_;
  }

  public static final int INCLUDE_METADATA_FIELD_NUMBER = 5;
  private boolean includeMetadata_;
  /**
   * <pre>
   * Indicates whether metadata is included in the response as well as the ids.
   * </pre>
   *
   * <code>bool include_metadata = 5;</code>
   * @return The includeMetadata.
   */
  @java.lang.Override
  public boolean getIncludeMetadata() {
    return includeMetadata_;
  }

  public static final int QUERIES_FIELD_NUMBER = 6;
  private java.util.List<io.pinecone.proto.QueryVector> queries_;
  /**
   * <pre>
   * The query vectors.
   * </pre>
   *
   * <code>repeated .QueryVector queries = 6;</code>
   */
  @java.lang.Override
  public java.util.List<io.pinecone.proto.QueryVector> getQueriesList() {
    return queries_;
  }
  /**
   * <pre>
   * The query vectors.
   * </pre>
   *
   * <code>repeated .QueryVector queries = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.pinecone.proto.QueryVectorOrBuilder> 
      getQueriesOrBuilderList() {
    return queries_;
  }
  /**
   * <pre>
   * The query vectors.
   * </pre>
   *
   * <code>repeated .QueryVector queries = 6;</code>
   */
  @java.lang.Override
  public int getQueriesCount() {
    return queries_.size();
  }
  /**
   * <pre>
   * The query vectors.
   * </pre>
   *
   * <code>repeated .QueryVector queries = 6;</code>
   */
  @java.lang.Override
  public io.pinecone.proto.QueryVector getQueries(int index) {
    return queries_.get(index);
  }
  /**
   * <pre>
   * The query vectors.
   * </pre>
   *
   * <code>repeated .QueryVector queries = 6;</code>
   */
  @java.lang.Override
  public io.pinecone.proto.QueryVectorOrBuilder getQueriesOrBuilder(
      int index) {
    return queries_.get(index);
  }

  public static final int VECTOR_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.FloatList vector_;
  /**
   * <pre>
   * The query vector. This should be the same length as the dimension of the index being queried.
   * </pre>
   *
   * <code>repeated float vector = 7;</code>
   * @return A list containing the vector.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float>
      getVectorList() {
    return vector_;
  }
  /**
   * <pre>
   * The query vector. This should be the same length as the dimension of the index being queried.
   * </pre>
   *
   * <code>repeated float vector = 7;</code>
   * @return The count of vector.
   */
  public int getVectorCount() {
    return vector_.size();
  }
  /**
   * <pre>
   * The query vector. This should be the same length as the dimension of the index being queried.
   * </pre>
   *
   * <code>repeated float vector = 7;</code>
   * @param index The index of the element to return.
   * @return The vector at the given index.
   */
  public float getVector(int index) {
    return vector_.getFloat(index);
  }
  private int vectorMemoizedSerializedSize = -1;

  public static final int ID_FIELD_NUMBER = 8;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * The id of the vector
   * </pre>
   *
   * <code>string id = 8;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The id of the vector
   * </pre>
   *
   * <code>string id = 8;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getNamespaceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
    }
    if (topK_ != 0) {
      output.writeUInt32(2, topK_);
    }
    if (filter_ != null) {
      output.writeMessage(3, getFilter());
    }
    if (includeValues_ != false) {
      output.writeBool(4, includeValues_);
    }
    if (includeMetadata_ != false) {
      output.writeBool(5, includeMetadata_);
    }
    for (int i = 0; i < queries_.size(); i++) {
      output.writeMessage(6, queries_.get(i));
    }
    if (getVectorList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(vectorMemoizedSerializedSize);
    }
    for (int i = 0; i < vector_.size(); i++) {
      output.writeFloatNoTag(vector_.getFloat(i));
    }
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, id_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNamespaceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
    }
    if (topK_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, topK_);
    }
    if (filter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFilter());
    }
    if (includeValues_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, includeValues_);
    }
    if (includeMetadata_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, includeMetadata_);
    }
    for (int i = 0; i < queries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, queries_.get(i));
    }
    {
      int dataSize = 0;
      dataSize = 4 * getVectorList().size();
      size += dataSize;
      if (!getVectorList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      vectorMemoizedSerializedSize = dataSize;
    }
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, id_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.pinecone.proto.QueryRequest)) {
      return super.equals(obj);
    }
    io.pinecone.proto.QueryRequest other = (io.pinecone.proto.QueryRequest) obj;

    if (!getNamespace()
        .equals(other.getNamespace())) return false;
    if (getTopK()
        != other.getTopK()) return false;
    if (hasFilter() != other.hasFilter()) return false;
    if (hasFilter()) {
      if (!getFilter()
          .equals(other.getFilter())) return false;
    }
    if (getIncludeValues()
        != other.getIncludeValues()) return false;
    if (getIncludeMetadata()
        != other.getIncludeMetadata()) return false;
    if (!getQueriesList()
        .equals(other.getQueriesList())) return false;
    if (!getVectorList()
        .equals(other.getVectorList())) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
    hash = (53 * hash) + getNamespace().hashCode();
    hash = (37 * hash) + TOP_K_FIELD_NUMBER;
    hash = (53 * hash) + getTopK();
    if (hasFilter()) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
    }
    hash = (37 * hash) + INCLUDE_VALUES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncludeValues());
    hash = (37 * hash) + INCLUDE_METADATA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncludeMetadata());
    if (getQueriesCount() > 0) {
      hash = (37 * hash) + QUERIES_FIELD_NUMBER;
      hash = (53 * hash) + getQueriesList().hashCode();
    }
    if (getVectorCount() > 0) {
      hash = (37 * hash) + VECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getVectorList().hashCode();
    }
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.pinecone.proto.QueryRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.pinecone.proto.QueryRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.pinecone.proto.QueryRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.pinecone.proto.QueryRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.pinecone.proto.QueryRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The request for the `Query` operation.
   * </pre>
   *
   * Protobuf type {@code QueryRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:QueryRequest)
      io.pinecone.proto.QueryRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pinecone.proto.VectorServiceOuterClass.internal_static_QueryRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pinecone.proto.VectorServiceOuterClass.internal_static_QueryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pinecone.proto.QueryRequest.class, io.pinecone.proto.QueryRequest.Builder.class);
    }

    // Construct using io.pinecone.proto.QueryRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getQueriesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      namespace_ = "";

      topK_ = 0;

      if (filterBuilder_ == null) {
        filter_ = null;
      } else {
        filter_ = null;
        filterBuilder_ = null;
      }
      includeValues_ = false;

      includeMetadata_ = false;

      if (queriesBuilder_ == null) {
        queries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        queriesBuilder_.clear();
      }
      vector_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000002);
      id_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.pinecone.proto.VectorServiceOuterClass.internal_static_QueryRequest_descriptor;
    }

    @java.lang.Override
    public io.pinecone.proto.QueryRequest getDefaultInstanceForType() {
      return io.pinecone.proto.QueryRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.pinecone.proto.QueryRequest build() {
      io.pinecone.proto.QueryRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.pinecone.proto.QueryRequest buildPartial() {
      io.pinecone.proto.QueryRequest result = new io.pinecone.proto.QueryRequest(this);
      int from_bitField0_ = bitField0_;
      result.namespace_ = namespace_;
      result.topK_ = topK_;
      if (filterBuilder_ == null) {
        result.filter_ = filter_;
      } else {
        result.filter_ = filterBuilder_.build();
      }
      result.includeValues_ = includeValues_;
      result.includeMetadata_ = includeMetadata_;
      if (queriesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          queries_ = java.util.Collections.unmodifiableList(queries_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.queries_ = queries_;
      } else {
        result.queries_ = queriesBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        vector_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.vector_ = vector_;
      result.id_ = id_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.pinecone.proto.QueryRequest) {
        return mergeFrom((io.pinecone.proto.QueryRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.pinecone.proto.QueryRequest other) {
      if (other == io.pinecone.proto.QueryRequest.getDefaultInstance()) return this;
      if (!other.getNamespace().isEmpty()) {
        namespace_ = other.namespace_;
        onChanged();
      }
      if (other.getTopK() != 0) {
        setTopK(other.getTopK());
      }
      if (other.hasFilter()) {
        mergeFilter(other.getFilter());
      }
      if (other.getIncludeValues() != false) {
        setIncludeValues(other.getIncludeValues());
      }
      if (other.getIncludeMetadata() != false) {
        setIncludeMetadata(other.getIncludeMetadata());
      }
      if (queriesBuilder_ == null) {
        if (!other.queries_.isEmpty()) {
          if (queries_.isEmpty()) {
            queries_ = other.queries_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureQueriesIsMutable();
            queries_.addAll(other.queries_);
          }
          onChanged();
        }
      } else {
        if (!other.queries_.isEmpty()) {
          if (queriesBuilder_.isEmpty()) {
            queriesBuilder_.dispose();
            queriesBuilder_ = null;
            queries_ = other.queries_;
            bitField0_ = (bitField0_ & ~0x00000001);
            queriesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getQueriesFieldBuilder() : null;
          } else {
            queriesBuilder_.addAllMessages(other.queries_);
          }
        }
      }
      if (!other.vector_.isEmpty()) {
        if (vector_.isEmpty()) {
          vector_ = other.vector_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureVectorIsMutable();
          vector_.addAll(other.vector_);
        }
        onChanged();
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.pinecone.proto.QueryRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.pinecone.proto.QueryRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object namespace_ = "";
    /**
     * <pre>
     * The namespace to query.
     * </pre>
     *
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The namespace to query.
     * </pre>
     *
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The namespace to query.
     * </pre>
     *
     * <code>string namespace = 1;</code>
     * @param value The namespace to set.
     * @return This builder for chaining.
     */
    public Builder setNamespace(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      namespace_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The namespace to query.
     * </pre>
     *
     * <code>string namespace = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNamespace() {
      
      namespace_ = getDefaultInstance().getNamespace();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The namespace to query.
     * </pre>
     *
     * <code>string namespace = 1;</code>
     * @param value The bytes for namespace to set.
     * @return This builder for chaining.
     */
    public Builder setNamespaceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      namespace_ = value;
      onChanged();
      return this;
    }

    private int topK_ ;
    /**
     * <pre>
     * The number of results to return for each query.
     * </pre>
     *
     * <code>uint32 top_k = 2;</code>
     * @return The topK.
     */
    @java.lang.Override
    public int getTopK() {
      return topK_;
    }
    /**
     * <pre>
     * The number of results to return for each query.
     * </pre>
     *
     * <code>uint32 top_k = 2;</code>
     * @param value The topK to set.
     * @return This builder for chaining.
     */
    public Builder setTopK(int value) {
      
      topK_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of results to return for each query.
     * </pre>
     *
     * <code>uint32 top_k = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopK() {
      
      topK_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Struct filter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> filterBuilder_;
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     * @return Whether the filter field is set.
     */
    public boolean hasFilter() {
      return filterBuilder_ != null || filter_ != null;
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     * @return The filter.
     */
    public com.google.protobuf.Struct getFilter() {
      if (filterBuilder_ == null) {
        return filter_ == null ? com.google.protobuf.Struct.getDefaultInstance() : filter_;
      } else {
        return filterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    public Builder setFilter(com.google.protobuf.Struct value) {
      if (filterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filter_ = value;
        onChanged();
      } else {
        filterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    public Builder setFilter(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (filterBuilder_ == null) {
        filter_ = builderForValue.build();
        onChanged();
      } else {
        filterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    public Builder mergeFilter(com.google.protobuf.Struct value) {
      if (filterBuilder_ == null) {
        if (filter_ != null) {
          filter_ =
            com.google.protobuf.Struct.newBuilder(filter_).mergeFrom(value).buildPartial();
        } else {
          filter_ = value;
        }
        onChanged();
      } else {
        filterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    public Builder clearFilter() {
      if (filterBuilder_ == null) {
        filter_ = null;
        onChanged();
      } else {
        filter_ = null;
        filterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    public com.google.protobuf.Struct.Builder getFilterBuilder() {
      
      onChanged();
      return getFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    public com.google.protobuf.StructOrBuilder getFilterOrBuilder() {
      if (filterBuilder_ != null) {
        return filterBuilder_.getMessageOrBuilder();
      } else {
        return filter_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : filter_;
      }
    }
    /**
     * <pre>
     * The filter to apply if no filter is specified in `QueryVector. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/`
     * </pre>
     *
     * <code>.google.protobuf.Struct filter = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getFilterFieldBuilder() {
      if (filterBuilder_ == null) {
        filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getFilter(),
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      return filterBuilder_;
    }

    private boolean includeValues_ ;
    /**
     * <pre>
     * Indicates whether vector values are included in the response.
     * </pre>
     *
     * <code>bool include_values = 4;</code>
     * @return The includeValues.
     */
    @java.lang.Override
    public boolean getIncludeValues() {
      return includeValues_;
    }
    /**
     * <pre>
     * Indicates whether vector values are included in the response.
     * </pre>
     *
     * <code>bool include_values = 4;</code>
     * @param value The includeValues to set.
     * @return This builder for chaining.
     */
    public Builder setIncludeValues(boolean value) {
      
      includeValues_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether vector values are included in the response.
     * </pre>
     *
     * <code>bool include_values = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearIncludeValues() {
      
      includeValues_ = false;
      onChanged();
      return this;
    }

    private boolean includeMetadata_ ;
    /**
     * <pre>
     * Indicates whether metadata is included in the response as well as the ids.
     * </pre>
     *
     * <code>bool include_metadata = 5;</code>
     * @return The includeMetadata.
     */
    @java.lang.Override
    public boolean getIncludeMetadata() {
      return includeMetadata_;
    }
    /**
     * <pre>
     * Indicates whether metadata is included in the response as well as the ids.
     * </pre>
     *
     * <code>bool include_metadata = 5;</code>
     * @param value The includeMetadata to set.
     * @return This builder for chaining.
     */
    public Builder setIncludeMetadata(boolean value) {
      
      includeMetadata_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether metadata is included in the response as well as the ids.
     * </pre>
     *
     * <code>bool include_metadata = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearIncludeMetadata() {
      
      includeMetadata_ = false;
      onChanged();
      return this;
    }

    private java.util.List<io.pinecone.proto.QueryVector> queries_ =
      java.util.Collections.emptyList();
    private void ensureQueriesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        queries_ = new java.util.ArrayList<io.pinecone.proto.QueryVector>(queries_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.pinecone.proto.QueryVector, io.pinecone.proto.QueryVector.Builder, io.pinecone.proto.QueryVectorOrBuilder> queriesBuilder_;

    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public java.util.List<io.pinecone.proto.QueryVector> getQueriesList() {
      if (queriesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(queries_);
      } else {
        return queriesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public int getQueriesCount() {
      if (queriesBuilder_ == null) {
        return queries_.size();
      } else {
        return queriesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public io.pinecone.proto.QueryVector getQueries(int index) {
      if (queriesBuilder_ == null) {
        return queries_.get(index);
      } else {
        return queriesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder setQueries(
        int index, io.pinecone.proto.QueryVector value) {
      if (queriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueriesIsMutable();
        queries_.set(index, value);
        onChanged();
      } else {
        queriesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder setQueries(
        int index, io.pinecone.proto.QueryVector.Builder builderForValue) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.set(index, builderForValue.build());
        onChanged();
      } else {
        queriesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder addQueries(io.pinecone.proto.QueryVector value) {
      if (queriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueriesIsMutable();
        queries_.add(value);
        onChanged();
      } else {
        queriesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder addQueries(
        int index, io.pinecone.proto.QueryVector value) {
      if (queriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueriesIsMutable();
        queries_.add(index, value);
        onChanged();
      } else {
        queriesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder addQueries(
        io.pinecone.proto.QueryVector.Builder builderForValue) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.add(builderForValue.build());
        onChanged();
      } else {
        queriesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder addQueries(
        int index, io.pinecone.proto.QueryVector.Builder builderForValue) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.add(index, builderForValue.build());
        onChanged();
      } else {
        queriesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder addAllQueries(
        java.lang.Iterable<? extends io.pinecone.proto.QueryVector> values) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, queries_);
        onChanged();
      } else {
        queriesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder clearQueries() {
      if (queriesBuilder_ == null) {
        queries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        queriesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public Builder removeQueries(int index) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.remove(index);
        onChanged();
      } else {
        queriesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public io.pinecone.proto.QueryVector.Builder getQueriesBuilder(
        int index) {
      return getQueriesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public io.pinecone.proto.QueryVectorOrBuilder getQueriesOrBuilder(
        int index) {
      if (queriesBuilder_ == null) {
        return queries_.get(index);  } else {
        return queriesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public java.util.List<? extends io.pinecone.proto.QueryVectorOrBuilder> 
         getQueriesOrBuilderList() {
      if (queriesBuilder_ != null) {
        return queriesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(queries_);
      }
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public io.pinecone.proto.QueryVector.Builder addQueriesBuilder() {
      return getQueriesFieldBuilder().addBuilder(
          io.pinecone.proto.QueryVector.getDefaultInstance());
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public io.pinecone.proto.QueryVector.Builder addQueriesBuilder(
        int index) {
      return getQueriesFieldBuilder().addBuilder(
          index, io.pinecone.proto.QueryVector.getDefaultInstance());
    }
    /**
     * <pre>
     * The query vectors.
     * </pre>
     *
     * <code>repeated .QueryVector queries = 6;</code>
     */
    public java.util.List<io.pinecone.proto.QueryVector.Builder> 
         getQueriesBuilderList() {
      return getQueriesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.pinecone.proto.QueryVector, io.pinecone.proto.QueryVector.Builder, io.pinecone.proto.QueryVectorOrBuilder> 
        getQueriesFieldBuilder() {
      if (queriesBuilder_ == null) {
        queriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.pinecone.proto.QueryVector, io.pinecone.proto.QueryVector.Builder, io.pinecone.proto.QueryVectorOrBuilder>(
                queries_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        queries_ = null;
      }
      return queriesBuilder_;
    }

    private com.google.protobuf.Internal.FloatList vector_ = emptyFloatList();
    private void ensureVectorIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        vector_ = mutableCopy(vector_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @return A list containing the vector.
     */
    public java.util.List<java.lang.Float>
        getVectorList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(vector_) : vector_;
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @return The count of vector.
     */
    public int getVectorCount() {
      return vector_.size();
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @param index The index of the element to return.
     * @return The vector at the given index.
     */
    public float getVector(int index) {
      return vector_.getFloat(index);
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @param index The index to set the value at.
     * @param value The vector to set.
     * @return This builder for chaining.
     */
    public Builder setVector(
        int index, float value) {
      ensureVectorIsMutable();
      vector_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @param value The vector to add.
     * @return This builder for chaining.
     */
    public Builder addVector(float value) {
      ensureVectorIsMutable();
      vector_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @param values The vector to add.
     * @return This builder for chaining.
     */
    public Builder addAllVector(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureVectorIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, vector_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query vector. This should be the same length as the dimension of the index being queried.
     * </pre>
     *
     * <code>repeated float vector = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearVector() {
      vector_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The id of the vector
     * </pre>
     *
     * <code>string id = 8;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The id of the vector
     * </pre>
     *
     * <code>string id = 8;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The id of the vector
     * </pre>
     *
     * <code>string id = 8;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The id of the vector
     * </pre>
     *
     * <code>string id = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The id of the vector
     * </pre>
     *
     * <code>string id = 8;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:QueryRequest)
  }

  // @@protoc_insertion_point(class_scope:QueryRequest)
  private static final io.pinecone.proto.QueryRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.pinecone.proto.QueryRequest();
  }

  public static io.pinecone.proto.QueryRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryRequest>
      PARSER = new com.google.protobuf.AbstractParser<QueryRequest>() {
    @java.lang.Override
    public QueryRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new QueryRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<QueryRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.pinecone.proto.QueryRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

