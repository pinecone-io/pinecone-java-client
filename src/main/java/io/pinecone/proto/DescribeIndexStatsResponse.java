// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vector_service.proto

// Protobuf Java Version: 3.25.2
package io.pinecone.proto;

/**
 * <pre>
 * The response for the `DescribeIndexStats` operation.
 * </pre>
 *
 * Protobuf type {@code DescribeIndexStatsResponse}
 */
public final class DescribeIndexStatsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:DescribeIndexStatsResponse)
    DescribeIndexStatsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DescribeIndexStatsResponse.newBuilder() to construct.
  private DescribeIndexStatsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DescribeIndexStatsResponse() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new DescribeIndexStatsResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return VectorServiceOuterClass.internal_static_DescribeIndexStatsResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 1:
        return internalGetNamespaces();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return VectorServiceOuterClass.internal_static_DescribeIndexStatsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            DescribeIndexStatsResponse.class, Builder.class);
  }

  public static final int NAMESPACES_FIELD_NUMBER = 1;
  private static final class NamespacesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, NamespaceSummary> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, NamespaceSummary>newDefaultInstance(
                VectorServiceOuterClass.internal_static_DescribeIndexStatsResponse_NamespacesEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                NamespaceSummary.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      String, NamespaceSummary> namespaces_;
  private com.google.protobuf.MapField<String, NamespaceSummary>
  internalGetNamespaces() {
    if (namespaces_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          NamespacesDefaultEntryHolder.defaultEntry);
    }
    return namespaces_;
  }
  public int getNamespacesCount() {
    return internalGetNamespaces().getMap().size();
  }
  /**
   * <pre>
   * A mapping for each namespace in the index from the namespace name to a
   * summary of its contents. If a metadata filter expression is present, the
   * summary will reflect only vectors matching that expression.
   * </pre>
   *
   * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
   */
  @Override
  public boolean containsNamespaces(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetNamespaces().getMap().containsKey(key);
  }
  /**
   * Use {@link #getNamespacesMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, NamespaceSummary> getNamespaces() {
    return getNamespacesMap();
  }
  /**
   * <pre>
   * A mapping for each namespace in the index from the namespace name to a
   * summary of its contents. If a metadata filter expression is present, the
   * summary will reflect only vectors matching that expression.
   * </pre>
   *
   * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
   */
  @Override
  public java.util.Map<String, NamespaceSummary> getNamespacesMap() {
    return internalGetNamespaces().getMap();
  }
  /**
   * <pre>
   * A mapping for each namespace in the index from the namespace name to a
   * summary of its contents. If a metadata filter expression is present, the
   * summary will reflect only vectors matching that expression.
   * </pre>
   *
   * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
   */
  @Override
  public /* nullable */
NamespaceSummary getNamespacesOrDefault(
      String key,
      /* nullable */
NamespaceSummary defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, NamespaceSummary> map =
        internalGetNamespaces().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A mapping for each namespace in the index from the namespace name to a
   * summary of its contents. If a metadata filter expression is present, the
   * summary will reflect only vectors matching that expression.
   * </pre>
   *
   * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
   */
  @Override
  public NamespaceSummary getNamespacesOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, NamespaceSummary> map =
        internalGetNamespaces().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int DIMENSION_FIELD_NUMBER = 2;
  private int dimension_ = 0;
  /**
   * <pre>
   * The dimension of the indexed vectors.
   * </pre>
   *
   * <code>uint32 dimension = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The dimension.
   */
  @Override
  public int getDimension() {
    return dimension_;
  }

  public static final int INDEX_FULLNESS_FIELD_NUMBER = 3;
  private float indexFullness_ = 0F;
  /**
   * <pre>
   * The fullness of the index, regardless of whether a metadata filter expression was passed. The granularity of this metric is 10%.
   * </pre>
   *
   * <code>float index_fullness = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The indexFullness.
   */
  @Override
  public float getIndexFullness() {
    return indexFullness_;
  }

  public static final int TOTAL_VECTOR_COUNT_FIELD_NUMBER = 4;
  private int totalVectorCount_ = 0;
  /**
   * <pre>
   * The total number of vectors in the index, regardless of whether a metadata filter expression was passed
   * </pre>
   *
   * <code>uint32 total_vector_count = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The totalVectorCount.
   */
  @Override
  public int getTotalVectorCount() {
    return totalVectorCount_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetNamespaces(),
        NamespacesDefaultEntryHolder.defaultEntry,
        1);
    if (dimension_ != 0) {
      output.writeUInt32(2, dimension_);
    }
    if (Float.floatToRawIntBits(indexFullness_) != 0) {
      output.writeFloat(3, indexFullness_);
    }
    if (totalVectorCount_ != 0) {
      output.writeUInt32(4, totalVectorCount_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<String, NamespaceSummary> entry
         : internalGetNamespaces().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, NamespaceSummary>
      namespaces__ = NamespacesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, namespaces__);
    }
    if (dimension_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, dimension_);
    }
    if (Float.floatToRawIntBits(indexFullness_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, indexFullness_);
    }
    if (totalVectorCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, totalVectorCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof DescribeIndexStatsResponse)) {
      return super.equals(obj);
    }
    DescribeIndexStatsResponse other = (DescribeIndexStatsResponse) obj;

    if (!internalGetNamespaces().equals(
        other.internalGetNamespaces())) return false;
    if (getDimension()
        != other.getDimension()) return false;
    if (Float.floatToIntBits(getIndexFullness())
        != Float.floatToIntBits(
            other.getIndexFullness())) return false;
    if (getTotalVectorCount()
        != other.getTotalVectorCount()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetNamespaces().getMap().isEmpty()) {
      hash = (37 * hash) + NAMESPACES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetNamespaces().hashCode();
    }
    hash = (37 * hash) + DIMENSION_FIELD_NUMBER;
    hash = (53 * hash) + getDimension();
    hash = (37 * hash) + INDEX_FULLNESS_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getIndexFullness());
    hash = (37 * hash) + TOTAL_VECTOR_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTotalVectorCount();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static DescribeIndexStatsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static DescribeIndexStatsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static DescribeIndexStatsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static DescribeIndexStatsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static DescribeIndexStatsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static DescribeIndexStatsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static DescribeIndexStatsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static DescribeIndexStatsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static DescribeIndexStatsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static DescribeIndexStatsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static DescribeIndexStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static DescribeIndexStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(DescribeIndexStatsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The response for the `DescribeIndexStats` operation.
   * </pre>
   *
   * Protobuf type {@code DescribeIndexStatsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:DescribeIndexStatsResponse)
      DescribeIndexStatsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return VectorServiceOuterClass.internal_static_DescribeIndexStatsResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetNamespaces();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableNamespaces();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return VectorServiceOuterClass.internal_static_DescribeIndexStatsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DescribeIndexStatsResponse.class, Builder.class);
    }

    // Construct using io.pinecone.proto.DescribeIndexStatsResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableNamespaces().clear();
      dimension_ = 0;
      indexFullness_ = 0F;
      totalVectorCount_ = 0;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return VectorServiceOuterClass.internal_static_DescribeIndexStatsResponse_descriptor;
    }

    @Override
    public DescribeIndexStatsResponse getDefaultInstanceForType() {
      return DescribeIndexStatsResponse.getDefaultInstance();
    }

    @Override
    public DescribeIndexStatsResponse build() {
      DescribeIndexStatsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public DescribeIndexStatsResponse buildPartial() {
      DescribeIndexStatsResponse result = new DescribeIndexStatsResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(DescribeIndexStatsResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.namespaces_ = internalGetNamespaces().build(NamespacesDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.dimension_ = dimension_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.indexFullness_ = indexFullness_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.totalVectorCount_ = totalVectorCount_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof DescribeIndexStatsResponse) {
        return mergeFrom((DescribeIndexStatsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(DescribeIndexStatsResponse other) {
      if (other == DescribeIndexStatsResponse.getDefaultInstance()) return this;
      internalGetMutableNamespaces().mergeFrom(
          other.internalGetNamespaces());
      bitField0_ |= 0x00000001;
      if (other.getDimension() != 0) {
        setDimension(other.getDimension());
      }
      if (other.getIndexFullness() != 0F) {
        setIndexFullness(other.getIndexFullness());
      }
      if (other.getTotalVectorCount() != 0) {
        setTotalVectorCount(other.getTotalVectorCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<String, NamespaceSummary>
              namespaces__ = input.readMessage(
                  NamespacesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableNamespaces().ensureBuilderMap().put(
                  namespaces__.getKey(), namespaces__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              dimension_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 29: {
              indexFullness_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 32: {
              totalVectorCount_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private static final class NamespacesConverter implements com.google.protobuf.MapFieldBuilder.Converter<String, NamespaceSummaryOrBuilder, NamespaceSummary> {
      @Override
      public NamespaceSummary build(NamespaceSummaryOrBuilder val) {
        if (val instanceof NamespaceSummary) { return (NamespaceSummary) val; }
        return ((NamespaceSummary.Builder) val).build();
      }

      @Override
      public com.google.protobuf.MapEntry<String, NamespaceSummary> defaultEntry() {
        return NamespacesDefaultEntryHolder.defaultEntry;
      }
    };
    private static final NamespacesConverter namespacesConverter = new NamespacesConverter();

    private com.google.protobuf.MapFieldBuilder<
        String, NamespaceSummaryOrBuilder, NamespaceSummary, NamespaceSummary.Builder> namespaces_;
    private com.google.protobuf.MapFieldBuilder<String, NamespaceSummaryOrBuilder, NamespaceSummary, NamespaceSummary.Builder>
        internalGetNamespaces() {
      if (namespaces_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(namespacesConverter);
      }
      return namespaces_;
    }
    private com.google.protobuf.MapFieldBuilder<String, NamespaceSummaryOrBuilder, NamespaceSummary, NamespaceSummary.Builder>
        internalGetMutableNamespaces() {
      if (namespaces_ == null) {
        namespaces_ = new com.google.protobuf.MapFieldBuilder<>(namespacesConverter);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return namespaces_;
    }
    public int getNamespacesCount() {
      return internalGetNamespaces().ensureBuilderMap().size();
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    @Override
    public boolean containsNamespaces(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetNamespaces().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getNamespacesMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, NamespaceSummary> getNamespaces() {
      return getNamespacesMap();
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    @Override
    public java.util.Map<String, NamespaceSummary> getNamespacesMap() {
      return internalGetNamespaces().getImmutableMap();
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    @Override
    public /* nullable */
NamespaceSummary getNamespacesOrDefault(
        String key,
        /* nullable */
NamespaceSummary defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, NamespaceSummaryOrBuilder> map = internalGetMutableNamespaces().ensureBuilderMap();
      return map.containsKey(key) ? namespacesConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    @Override
    public NamespaceSummary getNamespacesOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, NamespaceSummaryOrBuilder> map = internalGetMutableNamespaces().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return namespacesConverter.build(map.get(key));
    }
    public Builder clearNamespaces() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableNamespaces().clear();
      return this;
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    public Builder removeNamespaces(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableNamespaces().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, NamespaceSummary>
        getMutableNamespaces() {
      bitField0_ |= 0x00000001;
      return internalGetMutableNamespaces().ensureMessageMap();
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    public Builder putNamespaces(
        String key,
        NamespaceSummary value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableNamespaces().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    public Builder putAllNamespaces(
        java.util.Map<String, NamespaceSummary> values) {
      for (java.util.Map.Entry<String, NamespaceSummary> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableNamespaces().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * A mapping for each namespace in the index from the namespace name to a
     * summary of its contents. If a metadata filter expression is present, the
     * summary will reflect only vectors matching that expression.
     * </pre>
     *
     * <code>map&lt;string, .NamespaceSummary&gt; namespaces = 1;</code>
     */
    public NamespaceSummary.Builder putNamespacesBuilderIfAbsent(
        String key) {
      java.util.Map<String, NamespaceSummaryOrBuilder> builderMap = internalGetMutableNamespaces().ensureBuilderMap();
      NamespaceSummaryOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = NamespaceSummary.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof NamespaceSummary) {
        entry = ((NamespaceSummary) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (NamespaceSummary.Builder) entry;
    }

    private int dimension_ ;
    /**
     * <pre>
     * The dimension of the indexed vectors.
     * </pre>
     *
     * <code>uint32 dimension = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The dimension.
     */
    @Override
    public int getDimension() {
      return dimension_;
    }
    /**
     * <pre>
     * The dimension of the indexed vectors.
     * </pre>
     *
     * <code>uint32 dimension = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param value The dimension to set.
     * @return This builder for chaining.
     */
    public Builder setDimension(int value) {

      dimension_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The dimension of the indexed vectors.
     * </pre>
     *
     * <code>uint32 dimension = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearDimension() {
      bitField0_ = (bitField0_ & ~0x00000002);
      dimension_ = 0;
      onChanged();
      return this;
    }

    private float indexFullness_ ;
    /**
     * <pre>
     * The fullness of the index, regardless of whether a metadata filter expression was passed. The granularity of this metric is 10%.
     * </pre>
     *
     * <code>float index_fullness = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The indexFullness.
     */
    @Override
    public float getIndexFullness() {
      return indexFullness_;
    }
    /**
     * <pre>
     * The fullness of the index, regardless of whether a metadata filter expression was passed. The granularity of this metric is 10%.
     * </pre>
     *
     * <code>float index_fullness = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param value The indexFullness to set.
     * @return This builder for chaining.
     */
    public Builder setIndexFullness(float value) {

      indexFullness_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The fullness of the index, regardless of whether a metadata filter expression was passed. The granularity of this metric is 10%.
     * </pre>
     *
     * <code>float index_fullness = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexFullness() {
      bitField0_ = (bitField0_ & ~0x00000004);
      indexFullness_ = 0F;
      onChanged();
      return this;
    }

    private int totalVectorCount_ ;
    /**
     * <pre>
     * The total number of vectors in the index, regardless of whether a metadata filter expression was passed
     * </pre>
     *
     * <code>uint32 total_vector_count = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The totalVectorCount.
     */
    @Override
    public int getTotalVectorCount() {
      return totalVectorCount_;
    }
    /**
     * <pre>
     * The total number of vectors in the index, regardless of whether a metadata filter expression was passed
     * </pre>
     *
     * <code>uint32 total_vector_count = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param value The totalVectorCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalVectorCount(int value) {

      totalVectorCount_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of vectors in the index, regardless of whether a metadata filter expression was passed
     * </pre>
     *
     * <code>uint32 total_vector_count = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalVectorCount() {
      bitField0_ = (bitField0_ & ~0x00000008);
      totalVectorCount_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:DescribeIndexStatsResponse)
  }

  // @@protoc_insertion_point(class_scope:DescribeIndexStatsResponse)
  private static final DescribeIndexStatsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new DescribeIndexStatsResponse();
  }

  public static DescribeIndexStatsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DescribeIndexStatsResponse>
      PARSER = new com.google.protobuf.AbstractParser<DescribeIndexStatsResponse>() {
    @Override
    public DescribeIndexStatsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DescribeIndexStatsResponse> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<DescribeIndexStatsResponse> getParserForType() {
    return PARSER;
  }

  @Override
  public DescribeIndexStatsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

