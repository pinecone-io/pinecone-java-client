/*
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.pinecone.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.pinecone.rest.model.NamespaceSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The response for the &#x60;DescribeIndexStats&#x60; operation.
 */
@ApiModel(description = "The response for the `DescribeIndexStats` operation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-15T23:32:38.960526Z[Etc/UTC]")
public class DescribeIndexStatsResponse {
  public static final String SERIALIZED_NAME_NAMESPACES = "namespaces";
  @SerializedName(SERIALIZED_NAME_NAMESPACES)
  private Map<String, NamespaceSummary> namespaces = null;

  public static final String SERIALIZED_NAME_DIMENSION = "dimension";
  @SerializedName(SERIALIZED_NAME_DIMENSION)
  private Long dimension;

  public static final String SERIALIZED_NAME_INDEX_FULLNESS = "indexFullness";
  @SerializedName(SERIALIZED_NAME_INDEX_FULLNESS)
  private Float indexFullness;


  public DescribeIndexStatsResponse namespaces(Map<String, NamespaceSummary> namespaces) {
    
    this.namespaces = namespaces;
    return this;
  }

  public DescribeIndexStatsResponse putNamespacesItem(String key, NamespaceSummary namespacesItem) {
    if (this.namespaces == null) {
      this.namespaces = new HashMap<String, NamespaceSummary>();
    }
    this.namespaces.put(key, namespacesItem);
    return this;
  }

   /**
   * A mapping for each namespace in the index from namespace name to a summary of its contents.
   * @return namespaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A mapping for each namespace in the index from namespace name to a summary of its contents.")

  public Map<String, NamespaceSummary> getNamespaces() {
    return namespaces;
  }


  public void setNamespaces(Map<String, NamespaceSummary> namespaces) {
    this.namespaces = namespaces;
  }


  public DescribeIndexStatsResponse dimension(Long dimension) {
    
    this.dimension = dimension;
    return this;
  }

   /**
   * The dimension of the indexed vectors.
   * @return dimension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1024", value = "The dimension of the indexed vectors.")

  public Long getDimension() {
    return dimension;
  }


  public void setDimension(Long dimension) {
    this.dimension = dimension;
  }


  public DescribeIndexStatsResponse indexFullness(Float indexFullness) {
    
    this.indexFullness = indexFullness;
    return this;
  }

   /**
   * The fullness of the index. The granularity of this metric is 10%.
   * @return indexFullness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.4", value = "The fullness of the index. The granularity of this metric is 10%.")

  public Float getIndexFullness() {
    return indexFullness;
  }


  public void setIndexFullness(Float indexFullness) {
    this.indexFullness = indexFullness;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeIndexStatsResponse describeIndexStatsResponse = (DescribeIndexStatsResponse) o;
    return Objects.equals(this.namespaces, describeIndexStatsResponse.namespaces) &&
        Objects.equals(this.dimension, describeIndexStatsResponse.dimension) &&
        Objects.equals(this.indexFullness, describeIndexStatsResponse.indexFullness);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespaces, dimension, indexFullness);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeIndexStatsResponse {\n");
    sb.append("    namespaces: ").append(toIndentedString(namespaces)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    indexFullness: ").append(toIndentedString(indexFullness)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

