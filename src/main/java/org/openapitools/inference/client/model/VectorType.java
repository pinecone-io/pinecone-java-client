/*
 * Pinecone Inference API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2025-01
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.inference.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Indicates whether this is a &#39;dense&#39; or &#39;sparse&#39; embedding.
 */
@JsonAdapter(VectorType.Adapter.class)
public enum VectorType {
  
  DENSE("dense"),
  
  SPARSE("sparse");

  private String value;

  VectorType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static VectorType fromValue(String value) {
    for (VectorType b : VectorType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<VectorType> {
    @Override
    public void write(final JsonWriter jsonWriter, final VectorType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VectorType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return VectorType.fromValue(value);
    }
  }
}

