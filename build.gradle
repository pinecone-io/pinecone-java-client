plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java-library'
    id 'com.google.protobuf' version '0.8.18'
    id 'maven-publish'
    id 'signing'
    id 'idea'
    id "io.github.gradle-nexus.publish-plugin" version '1.1.0'
}

group = 'io.pinecone'
version = '0.2.3' // [pc:VERSION_NEXT]
description = 'The Pinecone.io Java Client'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    jcenter()
}

def grpcVersion = '1.53.0'

dependencies {
    api "io.grpc:grpc-protobuf:${grpcVersion}"
    api "io.grpc:grpc-stub:${grpcVersion}"
    api "io.grpc:grpc-netty:${grpcVersion}"
    runtime 'io.netty:netty-tcnative-boringssl-static:2.0.59.Final'
    implementation 'org.slf4j:slf4j-api:2.0.5'
    implementation 'com.google.api.grpc:proto-google-common-protos:2.14.3'
    compileOnly "org.apache.tomcat:annotations-api:6.0.53" // necessary for Java 9+

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.5'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

tasks.named('build') {
    dependsOn('shadowJar')
}

// Configure Auto Relocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "io.pinecone.shadow" // Default value is "shadow"

}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.4"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

publishing {
    publications {
        pineconeClientMaven(MavenPublication) {
            from components.java
            pom {
                artifactId = 'pinecone-client'
                name = 'pinecone-client'
                description = 'The Pinecone.io Java Client'
                url = 'https://github.com/pinecone-io/pinecone-java-client'
                licenses {
                    license {
                        name = 'Proprietary License'
                    }
                }
                developers {
                    developer {
                        id = 'pinecone-ops'
                        name = 'Pinecone.io Ops'
                        email = 'ops@pinecone.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pinecone-io/pinecone-java-client.git'
                    developerConnection = 'scm:git:ssh://github.com/pinecone-io/pinecone-java-client.git'
                    url = 'http://github.com/pinecone-io/pinecone-java-client'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.pineconeClientMaven
}
